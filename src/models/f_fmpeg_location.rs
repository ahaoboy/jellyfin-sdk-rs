/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FFmpegLocation : Enum describing the location of the FFmpeg tool.
/// Enum describing the location of the FFmpeg tool.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FFmpegLocation {
    #[serde(rename = "NotFound")]
    NotFound,
    #[serde(rename = "SetByArgument")]
    SetByArgument,
    #[serde(rename = "Custom")]
    Custom,
    #[serde(rename = "System")]
    System,
}

impl std::fmt::Display for FFmpegLocation {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::NotFound => write!(f, "NotFound"),
            Self::SetByArgument => write!(f, "SetByArgument"),
            Self::Custom => write!(f, "Custom"),
            Self::System => write!(f, "System"),
        }
    }
}

impl Default for FFmpegLocation {
    fn default() -> FFmpegLocation {
        Self::NotFound
    }
}
