/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MediaPathDto : Media Path dto.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MediaPathDto {
    /// Gets or sets the name of the library.
    #[serde(rename = "Name")]
    pub name: String,
    /// Gets or sets the path to add.
    #[serde(
        rename = "Path",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub path: Option<Option<String>>,
    #[serde(rename = "PathInfo", skip_serializing_if = "Option::is_none")]
    pub path_info: Option<Box<models::MediaPathInfo>>,
}

impl MediaPathDto {
    /// Media Path dto.
    pub fn new(name: String) -> MediaPathDto {
        MediaPathDto {
            name,
            path: None,
            path_info: None,
        }
    }
}
