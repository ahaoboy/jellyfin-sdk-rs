/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubtitleProfile {
    #[serde(
        rename = "Format",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub format: Option<Option<String>>,
    #[serde(rename = "Method", skip_serializing_if = "Option::is_none")]
    pub method: Option<models::SubtitleDeliveryMethod>,
    #[serde(
        rename = "DidlMode",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub didl_mode: Option<Option<String>>,
    #[serde(
        rename = "Language",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub language: Option<Option<String>>,
    #[serde(
        rename = "Container",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub container: Option<Option<String>>,
}

impl SubtitleProfile {
    pub fn new() -> SubtitleProfile {
        SubtitleProfile {
            format: None,
            method: None,
            didl_mode: None,
            language: None,
            container: None,
        }
    }
}
