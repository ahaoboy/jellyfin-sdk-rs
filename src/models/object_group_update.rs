/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ObjectGroupUpdate : Class GroupUpdate.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ObjectGroupUpdate {
    /// Gets the group identifier.
    #[serde(rename = "GroupId", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<uuid::Uuid>,
    #[serde(rename = "Type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::GroupUpdateType>,
    /// Gets the update data.
    #[serde(
        rename = "Data",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub data: Option<Option<serde_json::Value>>,
}

impl ObjectGroupUpdate {
    /// Class GroupUpdate.
    pub fn new() -> ObjectGroupUpdate {
        ObjectGroupUpdate {
            group_id: None,
            r#type: None,
            data: None,
        }
    }
}
