/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CollectionTypeOptions {
    #[serde(rename = "Movies")]
    Movies,
    #[serde(rename = "TvShows")]
    TvShows,
    #[serde(rename = "Music")]
    Music,
    #[serde(rename = "MusicVideos")]
    MusicVideos,
    #[serde(rename = "HomeVideos")]
    HomeVideos,
    #[serde(rename = "BoxSets")]
    BoxSets,
    #[serde(rename = "Books")]
    Books,
    #[serde(rename = "Mixed")]
    Mixed,
}

impl std::fmt::Display for CollectionTypeOptions {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Movies => write!(f, "Movies"),
            Self::TvShows => write!(f, "TvShows"),
            Self::Music => write!(f, "Music"),
            Self::MusicVideos => write!(f, "MusicVideos"),
            Self::HomeVideos => write!(f, "HomeVideos"),
            Self::BoxSets => write!(f, "BoxSets"),
            Self::Books => write!(f, "Books"),
            Self::Mixed => write!(f, "Mixed"),
        }
    }
}

impl Default for CollectionTypeOptions {
    fn default() -> CollectionTypeOptions {
        Self::Movies
    }
}
